<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWeaponAttack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player projectile
vx = 0;
vy = 0;

image_xscale = 64;
vel = 64.0;

damage = 0;
knockback = 4;

dead = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update projectile
if (!dead)
{
    x += vx;
    y += vy;
    
    // keep shrinking on the y-axis
    image_yscale *= 0.5;
    
    // stretch image_xscale until it hits the wall
    image_xscale += vel;
    
    if (place_meeting(x, y, oTileCollision) || image_yscale &lt;= 0.05) // hit the wall or too shrunken
    {
        // Then kill the projectile
        dead = true;
    }
    
    var _rng = irandom_range(1, 2);
    repeat (_rng)
    {
        // spawn particle
        var _x = x + lengthdir_x(random_range(0, image_xscale), image_angle) + random_range(-4, 4);
        var _y = y + lengthdir_y(random_range(0, image_yscale), image_angle) + random_range(-4, 4);
        fx_emit_dust(_x, _y, random_range(-2, 2), random_range(-2, 2), 0.75, room_speed);
    }
}
else
{
    if (image_alpha &gt; 0)
        image_alpha -= 0.25;
    else
        instance_destroy(id);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
